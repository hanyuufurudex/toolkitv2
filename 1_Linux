#!/bin/bash

# Check if a CSV file is provided as an argument
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <path-to-csv-file>"
    exit 1
fi

# Read the CSV file
while IFS=',' read -r server user; do
    echo "Processing $server..."
    
    # Get CPU cores, RAM, and packages
    cpu_cores=$(ssh "$user"@"$server" "nproc")
    total_ram=$(ssh "$user"@"$server" "free -g | grep Mem | awk '{print $2}'")
    java_packages=$(ssh "$user"@"$server" "yum list installed | grep -i java")
    hadoop_related=$(ssh "$user"@"$server" "yum list installed | grep -i hadoop")

    # Collect keystore locations from user home directories and ps -ef
    keystore_locations=""
    user_dirs=$(ssh "$user"@"$server" "ls /home/")
    for dir in $user_dirs; do
        keystore=$(ssh "$user"@"$server" "find /home/$dir -name '*.jks' 2>/dev/null")
        keystore_locations="$keystore_locations $keystore"
        # Export user profile
        ssh "$user"@"$server" "cat /home/$dir/.profile" > "$server-$dir-profile.txt"
    done
    # Regex that isolates java keystores (and extracts the paths)
    keystore_locations_from_ps=$(ssh "$user"@"$server" "ps -ef | grep -o -E '-D(keystore|javax\.net\.ssl\.keyStore)=[^ ]+' | cut -d'=' -f2")
    keystore_locations="$keystore_locations $keystore_locations_from_ps"

    # Network integrations
    network_info=$(ssh "$user"@"$server" "netstat -ntpl | grep -v '127.0.0.1' | awk '{print $5}' | sort | uniq")

    # Attempt to grab dependencies from running programs via yum provides.
    packages_list=""
    running_bins=$(ssh "$user"@"$server" "ps aux | awk '{print \$11}' | sort | uniq")
    for bin in $running_bins; do
        if [[ "$bin" =~ "/" ]]; then  # Only process if it looks like a path
            libs=$(ssh "$user"@"$server" "ldd '$bin' 2>/dev/null | awk '{print \$3}' | grep -v '^$'")
            for lib in $libs; do
                package=$(ssh "$user"@"$server" "yum provides '$lib' 2>/dev/null | grep ' : ' | head -n 1 | awk '{print \$1}'")
                packages_list="$packages_list $package"
            done
        fi
    done
    packages_list=$(echo "$packages_list" | tr ' ' '\n' | sort | uniq)

    # Print the collected information
    echo "Server: $server"
    echo "CPU Cores: $cpu_cores"
    echo "RAM in GB: $total_ram"
    echo "Java packages: $java_packages"
    echo "Hadoop-related packages: $hadoop_related"
    echo "Java keystore locations: $keystore_locations"
    echo "Network info: $network_info"
    echo "Packages for running binaries: $packages_list"
    echo "--------------------------"
    
done < "$1"
