#!/bin/bash

function get_disk_info() {
    # Arguments:
    # $1 - server address (can be localhost)

    # Fetching disk info
    ssh $1 "df -h | grep '/dev/mapper/'" | awk '{print $3, $4, $2, $NF}'  # Added $3 for used space
}

function display_disk_data() {
    local source_server=$(hostname)
    local target_server="$1"
    local padding=8  # Increased padding

    # Fetch disk info from source and target
    local source_info=$(get_disk_info $source_server)
    local target_info=$(get_disk_info $target_server)

    # Calculate max widths for each column with added padding
    local max_used_src_width=$(($(echo -e "Used - Src\n$source_info" | awk '{print $1}' | wc -L) + padding)) # Added this for used space
    local max_avail_src_width=$(($(echo -e "Avail - Src\n$source_info" | awk '{print $2}' | wc -L) + padding))
    local max_avail_tgt_width=$(($(echo -e "Avail - Tgt\n$target_info" | awk '{print $2}' | wc -L) + padding))
    local max_total_src_width=$(($(echo -e "Total - Src\n$source_info" | awk '{print $3}' | wc -L) + padding))
    local max_total_tgt_width=$(($(echo -e "Total - Tgt\n$target_info" | awk '{print $3}' | wc -L) + padding))
    local max_ready_width=$(echo "Space Ready" | wc -L)
    local max_mount_width=$(($(echo -e "Mount\n${source_info}\n${target_info}" | awk '{print $4}' | wc -L) + padding))

    # Print headers with padding
    printf "%-${max_used_src_width}s | %-${max_avail_src_width}s | %-${max_avail_tgt_width}s | %-${max_total_src_width}s | %-${max_total_tgt_width}s | %-${max_ready_width}s | %-${max_mount_width}s\n" "Used - Src" "Avail - Src" "Avail - Tgt" "Total - Src" "Total - Tgt" "Space Ready" "Mount"
    echo "-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"

    declare -A source_data
    declare -A target_data

    while read -r used avail total mount; do
        source_data["$mount"]="$used $avail $total $mount"
    done <<< "$source_info"

    while read -r used avail total mount; do  # Added used here for consistency, though we're not using it from the target server
        target_data["$mount"]="$avail $total $mount"
    done <<< "$target_info"

    keys=$(echo -e "${!source_data[@]}\n${!target_data[@]}" | sort -u)

    # Display data
    for mount in $keys; do
        local source_line=${source_data["$mount"]}
        local target_line=${target_data["$mount"]}
        
        local source_used=$(echo $source_line | awk '{print $1}')
        local source_avail=$(echo $source_line | awk '{print $2}')
        local source_total=$(echo $source_line | awk '{print $3}')
        local source_mount=$(echo $source_line | awk '{print $4}')
        
        local target_avail=$(echo $target_line | awk '{print $1}')
        local target_total=$(echo $target_line | awk '{print $2}')
        local target_mount=$(echo $target_line | awk '{print $3}')
        
        if [ -z "$source_mount" ]; then
            source_mount="N/A (target)"
            source_used="N/A"
            source_avail="N/A"
            source_total="N/A"
        fi
        
        if [ -z "$target_mount" ]; then
            target_mount="N/A (source)"
            target_avail="N/A"
            target_total="N/A"
        fi

        # If mount paths are not the same, label the one from the source
        [ "$source_mount" != "$target_mount" ] && source_mount="$source_mount (source)"
        
        local space_ready="No"
		local target_available=${target_avail//[^0-9.]}
		[ $(echo "$source_used <= $target_available" | bc) -eq 1 ] && space_ready="Yes"
		
        printf "%-${max_used_src_width}s | %-${max_avail_src_width}s | %-${max_avail_tgt_width}s | %-${max_total_src_width}s | %-${max_total_tgt_width}s | %-${max_ready_width}s | %-${max_mount_width}s\n" "$source_used" "$source_avail" "$target_avail" "$source_total" "$target_total" "$space_ready" "$source_mount"
    done
}

# Usage
display_disk_data "target_server_address"
